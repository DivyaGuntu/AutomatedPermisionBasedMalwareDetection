package com.tsu.securityanalysis;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.List;

import com.opencsv.CSVWriter;

import android.support.v7.app.ActionBarActivity;
import android.annotation.SuppressLint;
import android.app.ActivityManager;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.content.pm.PackageManager.NameNotFoundException;
import android.os.Bundle;
import android.os.Environment;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;


@SuppressLint("NewApi") public class MainActivity extends ActionBarActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
    	String path = Environment.getExternalStorageDirectory() + "/SecurityAnalysis/";
        LoadTrainingSet(path);
        ExtractPermissions();
    }
   
    
    public void ExtractPermissions()
    { 
      Classification c = new Classification();
      final PackageManager pm = getPackageManager();
      List<ApplicationInfo> packages =  pm.getInstalledApplications(PackageManager.GET_META_DATA);
      for (ApplicationInfo applicationInfo : packages) {
      		//  Log.d("test", "App: " + applicationInfo.name + " Package: " + applicationInfo.packageName);
      		  if ((applicationInfo.flags & ApplicationInfo.FLAG_SYSTEM /*| ApplicationInfo.FLAG_UPDATED_SYSTEM_APP*/) != 0)
      	        {
      			  //Log.d("test", "SystemApp: " + applicationInfo.name + " Package: " + applicationInfo.packageName);
      	        }
      	        else
      	        {	
      	       try{
      	    	 ArrayList<String> appNameAndPermissions = new ArrayList<String>();
      		     PackageInfo packageInfo = pm.getPackageInfo(applicationInfo.packageName, PackageManager.GET_PERMISSIONS);
      		    
      		   //Get Permissions
      		   String[] requestedPermissions = packageInfo.requestedPermissions;
      		   String currentPackage = packageInfo.packageName;
      		   ApplicationInfo ai = pm.getApplicationInfo(currentPackage, 0);
      		   final String applicationName = (String) (ai != null ? pm.getApplicationLabel(ai) : "(unknown)");
               appNameAndPermissions.add(applicationName);
               appNameAndPermissions.add(currentPackage);
      		   //Log.d("test", "App: " + applicationName + " Package: " + applicationInfo.packageName);
      		   if(requestedPermissions != null) {
      		   for (int j = 0; j < requestedPermissions.length; j++) {
      		   //Log.d("test", requestedPermissions[j]);
      		   System.out.println(requestedPermissions[j]);
      		   String permission = requestedPermissions[j];
      		   String[] perm = permission.split("android.permission.");
      		   appNameAndPermissions.add(perm[1]);
      		  }
      		   c.WriteFeatureCSV(appNameAndPermissions);
      		  
  			  }
      		  } catch (NameNotFoundException e) {
      		   e.printStackTrace();
      		  }
  		  catch (Exception e) {
     		   e.printStackTrace();
     		  }
      	        }
        }
        c.createFeaturearff();
      }
    
    public void LoadTrainingSet(String path){
    	File dir = new File(path);
        dir.mkdir();
        String filename1 = "TrainingSet.arff";
        try{ 
        InputStream in = getApplicationContext().getAssets().open("features.arff");
    	//BufferedReader reader = new BufferedReader(new InputStreamReader(in));
        File keyFile = new File(dir,filename1);
        if (!keyFile.exists())
        keyFile.createNewFile();
        OutputStream out = new FileOutputStream(keyFile);
        byte[] buf = new byte[1024];
        int len;
        while ((len = in.read(buf)) > 0)
        out.write(buf, 0, len);
        in.close();
        out.close();
        }
        catch(Exception e){
        	Log.d("",""+e);
        }
        try{ 
        	String filename2 = "TestingSet.csv";
            InputStream in = getApplicationContext().getAssets().open("TestingSet.csv");
        	//BufferedReader reader = new BufferedReader(new InputStreamReader(in));
            File keyFile = new File(dir,filename2);
            if (!keyFile.exists())
            keyFile.createNewFile();
            OutputStream out = new FileOutputStream(keyFile);
            byte[] buf = new byte[1024];
            int len;
            while ((len = in.read(buf)) > 0)
            out.write(buf, 0, len);
            in.close();
            out.close();
             }
            catch(Exception e){
            	Log.d("",""+e);
            }
    	
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }
}
